// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render PickupLocationForm component and it should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PickupLocationForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Let's find your ideal car
</h1>,
        <form
          action=""
>
          <div
                    className="form-group"
          >
                    <label
                              htmlFor="pickup-location"
                    >
                              Pick-up Location
                    </label>
                    <DebounceInput
                              autoComplete="off"
                              className="form-control"
                              debounceTimeout={300}
                              element="input"
                              forceNotifyByEnter={true}
                              forceNotifyOnBlur={false}
                              id="pickup-location"
                              inputRef={undefined}
                              minLength={0}
                              name="pickup-location"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              onKeyDown={undefined}
                              placeholder="city, airport, region, district..."
                              type="text"
                              value=""
                    />
                    
                    <button
                              className="btn float-right"
                              onClick={[Function]}
                              type="submit"
                    >
                              Search
                    </button>
          </div>
</form>,
      ],
      "className": "pickup-location-form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Let's find your ideal car",
        },
        "ref": null,
        "rendered": "Let's find your ideal car",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "",
          "children": <div
            className="form-group"
>
            <label
                        htmlFor="pickup-location"
            >
                        Pick-up Location
            </label>
            <DebounceInput
                        autoComplete="off"
                        className="form-control"
                        debounceTimeout={300}
                        element="input"
                        forceNotifyByEnter={true}
                        forceNotifyOnBlur={false}
                        id="pickup-location"
                        inputRef={undefined}
                        minLength={0}
                        name="pickup-location"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={undefined}
                        placeholder="city, airport, region, district..."
                        type="text"
                        value=""
            />
            
            <button
                        className="btn float-right"
                        onClick={[Function]}
                        type="submit"
            >
                        Search
            </button>
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="pickup-location"
>
                Pick-up Location
</label>,
              <DebounceInput
                autoComplete="off"
                className="form-control"
                debounceTimeout={300}
                element="input"
                forceNotifyByEnter={true}
                forceNotifyOnBlur={false}
                id="pickup-location"
                inputRef={undefined}
                minLength={0}
                name="pickup-location"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={undefined}
                placeholder="city, airport, region, district..."
                type="text"
                value=""
/>,
              false,
              "",
              false,
              <button
                className="btn float-right"
                onClick={[Function]}
                type="submit"
>
                Search
</button>,
              false,
            ],
            "className": "form-group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Pick-up Location",
                "htmlFor": "pickup-location",
              },
              "ref": null,
              "rendered": "Pick-up Location",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoComplete": "off",
                "className": "form-control",
                "debounceTimeout": 300,
                "element": "input",
                "forceNotifyByEnter": true,
                "forceNotifyOnBlur": false,
                "id": "pickup-location",
                "inputRef": undefined,
                "minLength": 0,
                "name": "pickup-location",
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
                "onKeyDown": undefined,
                "placeholder": "city, airport, region, district...",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
            "",
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Search",
                "className": "btn float-right",
                "onClick": [Function],
                "type": "submit",
              },
              "ref": null,
              "rendered": "Search",
              "type": "button",
            },
            false,
          ],
          "type": "div",
        },
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Let's find your ideal car
</h1>,
          <form
            action=""
>
            <div
                        className="form-group"
            >
                        <label
                                    htmlFor="pickup-location"
                        >
                                    Pick-up Location
                        </label>
                        <DebounceInput
                                    autoComplete="off"
                                    className="form-control"
                                    debounceTimeout={300}
                                    element="input"
                                    forceNotifyByEnter={true}
                                    forceNotifyOnBlur={false}
                                    id="pickup-location"
                                    inputRef={undefined}
                                    minLength={0}
                                    name="pickup-location"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={undefined}
                                    placeholder="city, airport, region, district..."
                                    type="text"
                                    value=""
                        />
                        
                        <button
                                    className="btn float-right"
                                    onClick={[Function]}
                                    type="submit"
                        >
                                    Search
                        </button>
            </div>
</form>,
        ],
        "className": "pickup-location-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Let's find your ideal car",
          },
          "ref": null,
          "rendered": "Let's find your ideal car",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "action": "",
            "children": <div
              className="form-group"
>
              <label
                            htmlFor="pickup-location"
              >
                            Pick-up Location
              </label>
              <DebounceInput
                            autoComplete="off"
                            className="form-control"
                            debounceTimeout={300}
                            element="input"
                            forceNotifyByEnter={true}
                            forceNotifyOnBlur={false}
                            id="pickup-location"
                            inputRef={undefined}
                            minLength={0}
                            name="pickup-location"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            onKeyDown={undefined}
                            placeholder="city, airport, region, district..."
                            type="text"
                            value=""
              />
              
              <button
                            className="btn float-right"
                            onClick={[Function]}
                            type="submit"
              >
                            Search
              </button>
</div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  htmlFor="pickup-location"
>
                  Pick-up Location
</label>,
                <DebounceInput
                  autoComplete="off"
                  className="form-control"
                  debounceTimeout={300}
                  element="input"
                  forceNotifyByEnter={true}
                  forceNotifyOnBlur={false}
                  id="pickup-location"
                  inputRef={undefined}
                  minLength={0}
                  name="pickup-location"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  onKeyDown={undefined}
                  placeholder="city, airport, region, district..."
                  type="text"
                  value=""
/>,
                false,
                "",
                false,
                <button
                  className="btn float-right"
                  onClick={[Function]}
                  type="submit"
>
                  Search
</button>,
                false,
              ],
              "className": "form-group",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Pick-up Location",
                  "htmlFor": "pickup-location",
                },
                "ref": null,
                "rendered": "Pick-up Location",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoComplete": "off",
                  "className": "form-control",
                  "debounceTimeout": 300,
                  "element": "input",
                  "forceNotifyByEnter": true,
                  "forceNotifyOnBlur": false,
                  "id": "pickup-location",
                  "inputRef": undefined,
                  "minLength": 0,
                  "name": "pickup-location",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "onKeyDown": undefined,
                  "placeholder": "city, airport, region, district...",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              false,
              "",
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Search",
                  "className": "btn float-right",
                  "onClick": [Function],
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Search",
                "type": "button",
              },
              false,
            ],
            "type": "div",
          },
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
